#!/usr/bin/env lua

-- load packages
package.path = '/net/pr2/projects/plgrid/plggorheuro/lua/?.lua;' .. package.path
local argparse = require 'argparse'
local sluarm = require 'sluarm'

-- globals

ROOTPATH = '/net/pr2/projects/plgrid/plggorheuro/fourcast'
TEMPPATH = '/net/tscratch/people/plgorhid/fourcast-tmp'

-- arguments

local parser = argparse()
   :name "prediction-script"
   :description "run stochastic prediction using the fourcast model."

parser:argument("day", "starting point for prediction: day.")
parser:argument("month", "starting point for prediction: month.")
parser:argument("year", "starting point for prediction: year.")

local args = parser:parse()

-- helper functions

table.shallow_copy = function (t)
  local u = {}
  for k,v in pairs(t) do u[k] = v end
  return u
end

local prepare_slurm_params = function ()
  local params = {}

  params.partition = 'plgrid-gpu-a100'
  params.account = 'plgimgwprzybycien-gpu-a100'
  params.gres = 'gpu:1'
  params.mem = '42G'
  params.job_name = 'fourcast'
  params.time = '0:12:00'
  params.nodes = '1'
  params.output = TEMPPATH .. '/slurm.out'
  params.error = TEMPPATH .. '/slurm.err'

  return params
end

local download_data = function (slurm_params)
  local script = ''
  script = script .. 'module load Python' .. '\n'
  script = script .. 'export PYTHONPATH=' .. ROOTPATH ..'/src:$PYTHONPATH' .. '\n'

  script = script .. 'python ' .. ROOTPATH .. '/src/datafactory/get_pl.py' .. ' --day ' .. args.day .. ' --month ' .. args.month .. ' --year ' .. args.year .. ' --datapath ' .. TEMPPATH .. ' --filename data_raw' .. '\n'
  script = script .. 'python ' .. ROOTPATH .. '/src/datafactory/get_sfc.py' .. ' --day ' .. args.day .. ' --month ' .. args.month .. ' --year ' .. args.year .. ' --datapath ' .. TEMPPATH .. ' --filename data_raw' .. '\n'
  script = script .. 'python ' .. ROOTPATH .. '/src/datafactory/translate_nc_hdf.py' .. ' --datapath ' .. TEMPPATH .. ' --filename data_raw' .. '\n'
  script = script .. 'python ' .. ROOTPATH .. '/src/datafactory/standardize.py' .. ' --yaml_config ' .. ROOTPATH .. '/src/config/AFNO.yaml' .. ' --config afno_backbone' .. ' --data_path_input ' .. TEMPPATH .. '/data_raw.h5' .. ' --data_path_output ' .. TEMPPATH .. '/data_standardized.h5' .. '\n'

  local params = table.shallow_copy(slurm_params)
  params.job_name = 'fourcast-download-data'
  sluarm.srun('bash -c "' .. script .. '"', params)

  return TEMPPATH .. '/data_standardized.h5'
end

local test_data = function ()
  os.execute('module load Python')
  os.execute('python ' .. ROOTPATH .. '/src/datafactory/standardize.py' .. ' --yaml_config ' .. ROOTPATH .. '/src/config/AFNO.yaml' .. ' --config afno_backbone' .. ' --data_path_input ' .. ROOTPATH .. '/data/2018.h5' .. ' --data_path_output ' .. TEMPPATH .. '/data_standardized.h5' .. '\n')
  return TEMPPATH .. '/data_standardized.h5'
end

-- main

os.execute('rm -rf ' .. TEMPPATH)
os.execute('mkdir ' .. TEMPPATH)
local slurm_params = prepare_slurm_params()
local datapath = download_data(slurm_params)
-- local datapath = test_data()

